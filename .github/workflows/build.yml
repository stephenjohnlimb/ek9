name: Java CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
env:
  AWS_REGION: "eu-west-2" # The region the AWS access for S3 and most components is

permissions:
  id-token: write # required for requesting a JWT from AWS
  contents: read  # required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install libtinfo5.
        run: wget http://archive.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb && sudo dpkg -i libtinfo5_6.3-2ubuntu0.1_amd64.deb && rm -f libtinfo5_6.3-2ubuntu0.1_amd64.deb
      - uses: actions/checkout@v4
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "18.1"
          env: true
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2.0.2
        with:
          cmake-version: '3.24.2'
      - name: Install Google Test
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtest-dev
          cd /usr/src/gtest
          sudo cmake CMakeLists.txt
          sudo make -j$(nproc)
          sudo cp lib/*.a /usr/lib
      - name: Verify C++ Build Environment
        run: |
          echo "=== Build Environment ==="
          cmake --version
          echo "LLVM_PATH: $LLVM_PATH"
          echo "Clang location: ${LLVM_PATH}/bin/clang"
          ${LLVM_PATH}/bin/clang++ --version
          echo "Setting CC=${LLVM_PATH}/bin/clang"
          echo "Setting CXX=${LLVM_PATH}/bin/clang++"
          ls -la ${LLVM_PATH}/bin/
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'zulu'
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots install
      - name: Generate API Documentation
        run: mvn --batch-mode javadoc:javadoc
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::332824293200:role/GitHubAction-AssumedRole
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      - name: Upload Site to EK9 S3 'www.ek9lang.org'
        run: aws s3 sync --quiet compiler-main/target/classes/site s3://www.ek9lang.org/
      - name: Upload Javadoc to EK9 S3 'repo.ek9lang.org'
        run: aws s3 sync --quiet compiler-main/target/site/apidocs s3://repo.ek9lang.org/apidocs
      - name: Upload repo site
        run: aws s3 sync --quiet compiler-main/target/classes/repo s3://repo.ek9lang.org/
