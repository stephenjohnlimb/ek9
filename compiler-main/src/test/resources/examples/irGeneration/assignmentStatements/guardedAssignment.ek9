#!ek9
<?-
  Different forms of assignment.
-?>
defines module assignments

  defines function

    @IR: IR_GENERATION: FUNCTION: "assignments::guardedAssignment": `
    ConstructDfn: assignments::guardedAssignment()->org.ek9.lang::Void
    OperationDfn: assignments::guardedAssignment.c_init()->org.ek9.lang::Void
    BasicBlock: _entry_1
    RETURN
    OperationDfn: assignments::guardedAssignment.i_init()->org.ek9.lang::Void
    BasicBlock: _entry_1
    RETURN
    OperationDfn: assignments::guardedAssignment.guardedAssignment()->assignments::guardedAssignment  // ./guardedAssignment.ek9:55:5
    BasicBlock: _entry_1
    _temp_i_init = CALL (assignments::guardedAssignment)this.i_init()  // ./guardedAssignment.ek9:55:5
    RETURN this  // ./guardedAssignment.ek9:55:5
    OperationDfn: assignments::guardedAssignment._call()->org.ek9.lang::Void  // ./guardedAssignment.ek9:55:5
    BasicBlock: _entry_1
    SCOPE_ENTER _scope_1
    REFERENCE value, org.ek9.lang::Integer  // ./guardedAssignment.ek9:56:7
    LABEL _guard_start_1
    _temp1 = IS_NULL value  // ./guardedAssignment.ek9:57:17
    BRANCH_TRUE _temp1, _assignment_1  // ./guardedAssignment.ek9:57:17
    LABEL _unset_check_1
    _temp2 = CALL (org.ek9.lang::Integer)value._isSet()  // ./guardedAssignment.ek9:57:17
    RETAIN _temp2  // ./guardedAssignment.ek9:57:17
    SCOPE_REGISTER _temp2, _scope_1  // ./guardedAssignment.ek9:57:17
    _temp3 = CALL (org.ek9.lang::Boolean)_temp2._true()  // ./guardedAssignment.ek9:57:17
    BRANCH_FALSE _temp3, _assignment_1  // ./guardedAssignment.ek9:57:17
    BRANCH _skip_1  // ./guardedAssignment.ek9:57:17
    LABEL _assignment_1
    _temp4 = LOAD_LITERAL 1, org.ek9.lang::Integer  // ./guardedAssignment.ek9:57:17
    RETAIN _temp4  // ./guardedAssignment.ek9:57:17
    SCOPE_REGISTER _temp4, _scope_1  // ./guardedAssignment.ek9:57:17
    RELEASE value  // ./guardedAssignment.ek9:57:17
    STORE value, _temp4  // ./guardedAssignment.ek9:57:17
    RETAIN value  // ./guardedAssignment.ek9:57:17
    SCOPE_REGISTER value, _scope_1  // ./guardedAssignment.ek9:57:17
    BRANCH _skip_1  // ./guardedAssignment.ek9:57:17
    LABEL _skip_1
    _temp6 = LOAD value  // ./guardedAssignment.ek9:58:19
    RETAIN _temp6  // ./guardedAssignment.ek9:58:19
    SCOPE_REGISTER _temp6, _scope_1  // ./guardedAssignment.ek9:58:19
    _temp5 = CALL (org.ek9.lang::Boolean)_temp6._isSet()  // ./guardedAssignment.ek9:58:19
    RETAIN _temp5  // ./guardedAssignment.ek9:58:7
    SCOPE_REGISTER _temp5, _scope_1  // ./guardedAssignment.ek9:58:7
    _temp7 = CALL (org.ek9.lang::Boolean)_temp5._true()  // ./guardedAssignment.ek9:58:7
    ASSERT _temp7  // ./guardedAssignment.ek9:58:7
    SCOPE_EXIT _scope_1
    RETURN`
    guardedAssignment()
      value as Integer?
      value :=? 1
      assert value?

//EOF