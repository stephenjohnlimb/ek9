#!ek9
<?-
  Different forms of assignment.
-?>
defines module assignments

  defines function

    @IR: IR_GENERATION: FUNCTION: "assignments::guardedAssignment": `
    ConstructDfn: assignments::guardedAssignment()->org.ek9.lang::Void
    OperationDfn: assignments::guardedAssignment.c_init()->org.ek9.lang::Void
    BasicBlock: _entry_1
    RETURN
    OperationDfn: assignments::guardedAssignment.i_init()->org.ek9.lang::Void
    BasicBlock: _entry_1
    RETURN
    OperationDfn: assignments::guardedAssignment.guardedAssignment()->assignments::guardedAssignment  // ./guardedAssignment.ek9:124:5
    BasicBlock: _entry_1
    CALL (assignments::guardedAssignment)this.i_init() [pure=false, complexity=0]  // ./guardedAssignment.ek9:124:5
    RETURN this  // ./guardedAssignment.ek9:124:5
    OperationDfn: assignments::guardedAssignment._call()->org.ek9.lang::Void  // ./guardedAssignment.ek9:124:5
    BasicBlock: _entry_1
    SCOPE_ENTER _scope_1  // ./guardedAssignment.ek9:125:7
    REFERENCE value, org.ek9.lang::Integer  // ./guardedAssignment.ek9:125:7
    CONTROL_FLOW_CHAIN  // ./guardedAssignment.ek9:126:17
    [
    chain_type: "GUARDED_ASSIGNMENT"
    condition_chain:
    [
    [
    case_scope_id: _scope_1
    case_type: "EXPRESSION"
    condition_evaluation:
    [
    _temp2 = CONTROL_FLOW_CHAIN  // ./guardedAssignment.ek9:126:17
    [
    chain_type: "QUESTION_OPERATOR"
    condition_chain:
    [
    [
    case_scope_id: _scope_1
    case_type: "NULL_CHECK"
    condition_evaluation:
    [
    _temp3 = IS_NULL value  // ./guardedAssignment.ek9:126:17
    ]
    primitive_condition: _temp3
    body_evaluation:
    [
    _temp4 = CALL_STATIC (org.ek9.lang::Boolean)org.ek9.lang::Boolean._ofFalse() [pure=true, complexity=0]  // ./guardedAssignment.ek9:126:17
    RETAIN _temp4  // ./guardedAssignment.ek9:126:17
    SCOPE_REGISTER _temp4, _scope_1  // ./guardedAssignment.ek9:126:17
    ]
    body_result: _temp4
    ]
    ]
    default_body_evaluation:
    [
    _temp5 = LOAD value  // ./guardedAssignment.ek9:126:17
    _temp6 = CALL (org.ek9.lang::Integer)_temp5._isSet() [pure=true, complexity=0]  // ./guardedAssignment.ek9:126:17
    ]
    default_result: _temp6
    scope_id: _scope_1
    ]
    _temp7 = CALL (org.ek9.lang::Boolean)_temp2._negate() [pure=true, complexity=0]  // ./guardedAssignment.ek9:126:17
    RETAIN _temp7  // ./guardedAssignment.ek9:126:17
    SCOPE_REGISTER _temp7, _scope_1  // ./guardedAssignment.ek9:126:17
    _temp8 = CALL (org.ek9.lang::Boolean)_temp7._true() [pure=true, complexity=0]  // ./guardedAssignment.ek9:126:17
    ]
    condition_result: _temp7
    primitive_condition: _temp8
    body_evaluation:
    [
    _temp1 = LOAD_LITERAL 1, org.ek9.lang::Integer  // ./guardedAssignment.ek9:126:17
    RETAIN _temp1  // ./guardedAssignment.ek9:126:17
    SCOPE_REGISTER _temp1, _scope_1  // ./guardedAssignment.ek9:126:17
    RELEASE value  // ./guardedAssignment.ek9:126:17
    STORE value, _temp1  // ./guardedAssignment.ek9:126:17
    RETAIN value  // ./guardedAssignment.ek9:126:17
    SCOPE_REGISTER value, _scope_1  // ./guardedAssignment.ek9:126:17
    ]
    ]
    ]
    scope_id: _scope_1
    ]
    _temp9 = CONTROL_FLOW_CHAIN  // ./guardedAssignment.ek9:127:19
    [
    chain_type: "QUESTION_OPERATOR"
    condition_chain:
    [
    [
    case_scope_id: _scope_1
    case_type: "NULL_CHECK"
    condition_evaluation:
    [
    _temp10 = LOAD value  // ./guardedAssignment.ek9:127:19
    _temp11 = IS_NULL _temp10  // ./guardedAssignment.ek9:127:19
    ]
    primitive_condition: _temp11
    body_evaluation:
    [
    _temp12 = CALL_STATIC (org.ek9.lang::Boolean)org.ek9.lang::Boolean._ofFalse() [pure=true, complexity=0]  // ./guardedAssignment.ek9:127:19
    RETAIN _temp12  // ./guardedAssignment.ek9:127:19
    SCOPE_REGISTER _temp12, _scope_1  // ./guardedAssignment.ek9:127:19
    ]
    body_result: _temp12
    ]
    ]
    default_body_evaluation:
    [
    _temp13 = CALL (org.ek9.lang::Boolean)_temp10._isSet() [pure=true, complexity=0]  // ./guardedAssignment.ek9:127:19
    RETAIN _temp13  // ./guardedAssignment.ek9:127:19
    SCOPE_REGISTER _temp13, _scope_1  // ./guardedAssignment.ek9:127:19
    ]
    default_result: _temp13
    scope_id: _scope_1
    ]
    RETAIN _temp9  // ./guardedAssignment.ek9:127:7
    SCOPE_REGISTER _temp9, _scope_1  // ./guardedAssignment.ek9:127:7
    _temp14 = CALL (org.ek9.lang::Boolean)_temp9._true() [pure=true, complexity=0]  // ./guardedAssignment.ek9:127:7
    ASSERT _temp14  // ./guardedAssignment.ek9:127:7
    SCOPE_EXIT _scope_1  // ./guardedAssignment.ek9:125:7
    RETURN  // ./guardedAssignment.ek9:124:5`
    guardedAssignment()
      value as Integer?
      value :=? 1
      assert value?

//EOF