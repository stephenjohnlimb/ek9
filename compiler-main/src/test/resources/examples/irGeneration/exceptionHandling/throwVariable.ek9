#!ek9
<?-
  Test IR generation for throw statement with variable reference.
  Throw variable form: throw exceptionVariable
  Tests that exception variable is loaded and thrown with proper ARC.
-?>
defines module exceptionHandling

  defines function

    @IR: IR_GENERATION: FUNCTION: "exceptionHandling::throwVariable": `
        ConstructDfn: exceptionHandling::throwVariable()->org.ek9.lang::Void
        OperationDfn: exceptionHandling::throwVariable.c_init()->org.ek9.lang::Void  
        BasicBlock: _entry_1
        RETURN
        OperationDfn: exceptionHandling::throwVariable.i_init()->org.ek9.lang::Void  
        BasicBlock: _entry_1
        RETURN
        OperationDfn: exceptionHandling::throwVariable.throwVariable()->exceptionHandling::throwVariable  // ./throwVariable.ek9:38:5
        BasicBlock: _entry_1
        CALL (exceptionHandling::throwVariable)this.i_init() [pure=false, complexity=0]  // ./throwVariable.ek9:38:5
        RETURN this  // ./throwVariable.ek9:38:5
        OperationDfn: exceptionHandling::throwVariable._call()->org.ek9.lang::Void  // ./throwVariable.ek9:38:5
        BasicBlock: _entry_1
        SCOPE_ENTER _scope_1  // ./throwVariable.ek9:39:7
        REFERENCE ex, org.ek9.lang::Exception  // ./throwVariable.ek9:39:7
        _temp2 = LOAD_LITERAL Variable exception, org.ek9.lang::String  // ./throwVariable.ek9:39:23
        _temp1 = CALL (org.ek9.lang::Exception)org.ek9.lang::Exception.<init>(_temp2) [pure=true, complexity=1, effects=RETURN_MUTATION]  // ./throwVariable.ek9:39:13
        RETAIN _temp1  // ./throwVariable.ek9:39:13
        SCOPE_REGISTER _temp1, _scope_1  // ./throwVariable.ek9:39:13
        STORE ex, _temp1  // ./throwVariable.ek9:39:13
        RETAIN ex  // ./throwVariable.ek9:39:13
        SCOPE_REGISTER ex, _scope_1  // ./throwVariable.ek9:39:13
        RETAIN ex  // ./throwVariable.ek9:40:7
        THROW ex  // ./throwVariable.ek9:40:7
        SCOPE_EXIT _scope_1  // ./throwVariable.ek9:39:7
        RETURN  // ./throwVariable.ek9:38:5`
    throwVariable()
      ex <- Exception("Variable exception")
      throw ex

//EOF
