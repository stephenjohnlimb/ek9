#!ek9
<?-
  Test IR generation for fuzzy comparison operator (<~>)
  
  Purpose: Analyze IR generation for String._fuzzy(String) method resolution,
  fuzzy string comparison returning Integer distance, and return value management.
  
  Expected IR: Method call to String._fuzzy(String) returning Integer
-?>
defines module fuzzy.test

  defines function

    @IR: IR_GENERATION: FUNCTION: "fuzzy.test::testFuzzy": `
    ConstructDfn: fuzzy.test::testFuzzy()->org.ek9.lang::Void
    OperationDfn: fuzzy.test::testFuzzy.c_init()->org.ek9.lang::Void  
    BasicBlock: _entry_1
    RETURN
    OperationDfn: fuzzy.test::testFuzzy.i_init()->org.ek9.lang::Void  
    BasicBlock: _entry_1
    RETURN
    OperationDfn: fuzzy.test::testFuzzy.testFuzzy()->fuzzy.test::testFuzzy  // ./fuzzy_operator.ek9:94:5
    BasicBlock: _entry_1
    _temp_i_init = CALL (fuzzy.test::testFuzzy)this.i_init() [pure=false, complexity=0]  // ./fuzzy_operator.ek9:94:5
    RETURN this  // ./fuzzy_operator.ek9:94:5
    OperationDfn: fuzzy.test::testFuzzy._call()->org.ek9.lang::Void  // ./fuzzy_operator.ek9:94:5
    BasicBlock: _entry_1
    SCOPE_ENTER _scope_1  // ./fuzzy_operator.ek9:95:7
    REFERENCE x, org.ek9.lang::String  // ./fuzzy_operator.ek9:95:7
    _temp1 = LOAD_LITERAL "hello", org.ek9.lang::String  // ./fuzzy_operator.ek9:95:20
    RETAIN _temp1  // ./fuzzy_operator.ek9:95:20
    SCOPE_REGISTER _temp1, _scope_1  // ./fuzzy_operator.ek9:95:20
    STORE x, _temp1  // ./fuzzy_operator.ek9:95:20
    RETAIN x  // ./fuzzy_operator.ek9:95:20
    SCOPE_REGISTER x, _scope_1  // ./fuzzy_operator.ek9:95:20
    REFERENCE y, org.ek9.lang::String  // ./fuzzy_operator.ek9:96:7
    _temp2 = LOAD_LITERAL "hallo", org.ek9.lang::String  // ./fuzzy_operator.ek9:96:20
    RETAIN _temp2  // ./fuzzy_operator.ek9:96:20
    SCOPE_REGISTER _temp2, _scope_1  // ./fuzzy_operator.ek9:96:20
    STORE y, _temp2  // ./fuzzy_operator.ek9:96:20
    RETAIN y  // ./fuzzy_operator.ek9:96:20
    SCOPE_REGISTER y, _scope_1  // ./fuzzy_operator.ek9:96:20
    REFERENCE distance, org.ek9.lang::Integer  // ./fuzzy_operator.ek9:97:7
    _temp4 = LOAD x  // ./fuzzy_operator.ek9:97:21
    RETAIN _temp4  // ./fuzzy_operator.ek9:97:21
    SCOPE_REGISTER _temp4, _scope_1  // ./fuzzy_operator.ek9:97:21
    _temp5 = LOAD y  // ./fuzzy_operator.ek9:97:21
    RETAIN _temp5  // ./fuzzy_operator.ek9:97:21
    SCOPE_REGISTER _temp5, _scope_1  // ./fuzzy_operator.ek9:97:21
    _temp3 = CALL (org.ek9.lang::String)_temp4._fuzzy(_temp5) [pure=true, complexity=2, effects=MUTATION]  // ./fuzzy_operator.ek9:97:21
    RETAIN _temp3  // ./fuzzy_operator.ek9:97:21
    SCOPE_REGISTER _temp3, _scope_1  // ./fuzzy_operator.ek9:97:21
    STORE distance, _temp3  // ./fuzzy_operator.ek9:97:21
    RETAIN distance  // ./fuzzy_operator.ek9:97:21
    SCOPE_REGISTER distance, _scope_1  // ./fuzzy_operator.ek9:97:21
    _temp6 = CONTROL_FLOW_CHAIN  // ./fuzzy_operator.ek9:98:7
    [
    chain_type: "QUESTION_OPERATOR"
    condition_chain:
    [
    [
    case_scope_id: _scope_1
    case_type: "NULL_CHECK"
    condition_evaluation:
    [
    _temp7 = LOAD distance  // ./fuzzy_operator.ek9:98:22
    _temp8 = IS_NULL _temp7  // ./fuzzy_operator.ek9:98:22
    ]
    primitive_condition: _temp8
    body_evaluation:
    [
    _temp9 = CALL_STATIC (org.ek9.lang::Boolean)org.ek9.lang::Boolean._ofFalse() [pure=false, complexity=0]  // ./fuzzy_operator.ek9:98:22
    RETAIN _temp9  // ./fuzzy_operator.ek9:98:22
    SCOPE_REGISTER _temp9, _scope_1  // ./fuzzy_operator.ek9:98:22
    ]
    body_result: _temp9
    ]
    ]
    default_body_evaluation:
    [
    _temp10 = CALL (org.ek9.lang::Boolean)_temp7._isSet() [pure=false, complexity=0]  // ./fuzzy_operator.ek9:98:22
    RETAIN _temp10  // ./fuzzy_operator.ek9:98:22
    SCOPE_REGISTER _temp10, _scope_1  // ./fuzzy_operator.ek9:98:22
    ]
    default_result: _temp10
    scope_id: _scope_1
    ]
    RETAIN _temp6  // ./fuzzy_operator.ek9:98:7
    SCOPE_REGISTER _temp6, _scope_1  // ./fuzzy_operator.ek9:98:7
    _temp11 = CALL (org.ek9.lang::Boolean)_temp6._true() [pure=false, complexity=0]  // ./fuzzy_operator.ek9:98:7
    ASSERT _temp11  // ./fuzzy_operator.ek9:98:7
    SCOPE_EXIT _scope_1  // ./fuzzy_operator.ek9:95:7
    RETURN  // ./fuzzy_operator.ek9:94:5`
    testFuzzy()
      x as String: "hello"
      y as String: "hallo"
      distance <- x <~> y
      assert distance?

//EOF