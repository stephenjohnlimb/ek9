#!ek9
defines module com.lock
  
  defines function
    createProtectedName()
      <- lock as MutexLock of String: MutexLock("Steve")
       
  defines program
    LockExample()
      stdout <- Stdout()

      //Item to wrap in a mutex lock so access is restricted
      lockableItem <- createProtectedName()

      //As we extend the generic function MutexKey we get its parameters when called.
      //here we also capture stdout.
      accessKey <- (stdout) extends MutexKey of String as function
        stdout.println("Accessing [" + $value + "]")
        //Now update the value - by copying data into it.
        value :=: "Stephen"

      //Now try access via key and wait on mutex
      lockableItem.enter(accessKey)

      //As there are no other threads access will be granted here
      //If other held the lock this would return false and key.access() would not be called. 
      assert lockableItem.tryEnter(accessKey)
//EOF