#!ek9
defines module com.customer.html

  defines text for "en"

    @Resolved: SYMBOL_DEFINITION: TYPE: "WebSite_en"
    WebSite
      index()
        `<html>
<head>
    <meta charset="UTF-8"/>
</head>
<body>
  <p>Hello, World</p>
</body>
</html>`

  defines service

    @Resolved: SYMBOL_DEFINITION: TYPE: "Site"
    Site :/site

      index() as GET for :/index.html
        <- response as HTTPResponse: () with trait HTTPResponse
          //Normally you'd use a component and inject it (i.e. a singleton with web site within)
          webSite <- WebSite("en")
          etag as String: String()

          override etag()
            <- rtn <- String()
            //Do this (:=?) so the etag is cached and not recalculated each time.
            etag :=? HMAC().SHA256(content())
            rtn :=? etag

          override cacheControl() as pure
            <- rtn as String: "public,max-age=3600,must-revalidate"
          override contentType() as pure
            <- rtn as String: "text/html"
          override contentLanguage() as pure
            <- rtn as String: "en"
          override content()
            <- rtn as String: webSite.index()
          override status() as pure
            <- rtn as Integer: 200
          default operator ?
//EOF