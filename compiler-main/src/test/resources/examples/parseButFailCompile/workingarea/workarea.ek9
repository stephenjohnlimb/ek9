#!ek9
defines module introduction


  defines function

    <!-
    andBooleanExpression()
      ->
        arg0 as Boolean
        arg1 as Boolean
      <-
        rtn as Boolean?

      rtn: arg0 and arg1

    orBooleanExpression()
      ->
        arg0 as Boolean
        arg1 as Boolean
      <-
        rtn as Boolean: Boolean()

      rtn: arg0 or arg1

    -!>
    mixedBooleanExpression()
      ->
        arg0 as Boolean
        arg1 as Boolean
        arg2 as Boolean
      <-
        rtn as Boolean: Boolean()

      rtn: arg0 and (arg1 or arg2)

<!-
    aSimpleFunction()
      -> arg0 as String
      <- rtn as String: String()

      someLocal as String?
      someLocal = "Hi"
      assert someLocal?

      set <- arg0?
      assert set

      claude <- "Hello Claude"
      rtn: claude

  defines program
    HelloWorld()

      //While Stdout is not defined here, it should be resolvable
      @Resolved: SYMBOL_DEFINITION: TYPE: "Stdout"
      stdout <- Stdout()
      toOutput <- "Hello, World"
      stdout.println(toOutput)
-!>

//EOF