#!ek9
<?-
  Just focuses on overriding class methods with dynamic classes and abstract template/generic classes
-?>
defines module bad.overriding.classmethods5

  defines trait

    //Create a trait with one concrete method and some abstract methods/operators
    T1
      concreteMethod()
        -> arg0 as Integer
        <- rtn as Boolean: arg0?

      tMethod()
        -> arg0 as Float
        <- rtn as Boolean?

      //To be able to use 'failure1 <- () with trait of T1 as class' need to define the ? operator.
      override operator ? as pure
        <- rtn as Boolean: true

      operator + as pure
        -> arg0 as Float
        <- rtn as Float?

  defines class

    //Used with the following dynamic classes.
    SomeAbstractGeneric of type T as abstract

      default SomeAbstractGeneric() as pure

      SomeAbstractGeneric() as pure
        -> arg0 as T
        assert arg0?

      absMethod() as abstract
        -> arg0 as T
        <- rtn as Boolean?

      override operator ? as pure
        <- rtn as Boolean: true

  defines function

    DriverFunction1()
      //Should fail
      @Error: FULL_RESOLUTION: DYNAMIC_CLASS_MUST_IMPLEMENT_ABSTRACTS
      failure1 <- () with trait of T1 as class
      assert failure1?

    DriverFunction2()
      //Again while the SomeAbstractGeneric has been parameterised - it is still abstract
      @Error: FULL_RESOLUTION: DYNAMIC_CLASS_MUST_IMPLEMENT_ABSTRACTS
      failure2 <- () extends SomeAbstractGeneric of String as class
      assert failure2?

    DriverFunction3()
      //Just check the missing the override in a dynamic class also gives an error.
      failure3 <- () extends SomeAbstractGeneric of String as class
        @Error: FULL_RESOLUTION: METHOD_OVERRIDES
        absMethod()
          -> arg0 as String
          <- rtn <- true
      assert failure3?

    WorkingDriverFunction()
      workingDynamicClass <- () extends SomeAbstractGeneric of String as class
        override absMethod()
          -> arg0 as String
          <- rtn <- true
      assert workingDynamicClass?

//EOF