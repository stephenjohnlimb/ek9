#!ek9
<?-
  Same as class, but just here to check that all the rules have been plugged in correctly.
-?>
defines module good.records.operators.examples

  defines record

    R1
      operator < as pure
        -> arg0 as R1
        <- rtn as Boolean: true

      operator > as pure
        -> arg0 as R1
        <- rtn as Boolean: true

      operator == as pure
        -> arg0 as R1
        <- rtn as Boolean: true

      operator <= as pure
        -> arg0 as R1
        <- rtn as Boolean: true

      operator >= as pure
        -> arg0 as R1
        <- rtn as Boolean: true

      operator <> as pure
        -> arg0 as R1
        <- rtn as Boolean: true

      operator <=> as pure
        -> arg0 as R1
        <- rtn as Integer: 0

      operator <~> as pure
        -> arg0 as R1
        <- rtn as Integer: 0

      operator ! as pure
        <- rtn as R1: this

      operator ? as pure
        <- rtn as Boolean: true

      operator ~ as pure
        <- rtn as R1: this

      operator ++
        <- rtn as R1: this

      operator --
        <- rtn as R1: this

      operator + as pure
        -> arg0 as R1
        <- rtn as R1: this

      operator + as pure
        -> arg0 as Integer
        <- rtn as Date: 2023-06-19

      operator - as pure
        -> arg0 as Date
        <- rtn as Duration: P6D

      operator * as pure
        -> arg0 as Float
        <- rtn as Dimension: 6km

      operator / as pure
        -> arg0 as Float
        <- rtn as Colour: #FF11DD

      operator ^ as pure
        -> arg0 as Integer
        <- rtn as Float: 45000.00

      operator :~:
        -> arg0 as R1
        assert arg0?

      operator :^:
        -> arg0 as R1
        assert arg0?

      operator :=:
        -> arg0 as R1
        assert arg0?

      operator |
        -> arg0 as R1
        assert arg0?

      operator +=
        -> arg0 as R1
        assert arg0?

      operator -=
        -> arg0 as R1
        assert arg0?

      operator *=
        -> arg0 as Integer
        assert arg0?

      operator /=
        -> arg0 as Duration
        assert arg0?

      operator #^ as pure
        <- rtn as Integer: 0

      operator $$ as pure
        <- rtn as JSON: JSON()

      operator $ as pure
        <- rtn as String: ""

      operator #? as pure
        <- rtn as Integer: 0

      operator #< as pure
        <- rtn as Integer: 0

      operator #> as pure
        <- rtn as Integer: 0

      operator >> as pure
        -> arg0 as Integer
        <- rtn as Integer: 0

      operator << as pure
        -> arg0 as Integer
        <- rtn as Integer: 0

      operator and as pure
        -> arg0 as Integer
        <- rtn as Integer: 0

      operator or as pure
        -> arg0 as Integer
        <- rtn as Integer: 0

      operator xor as pure
        -> arg0 as Integer
        <- rtn as Integer: 0

      operator mod as pure
        -> arg0 as Integer
        <- rtn as Integer: 0

      operator mod as pure
        -> arg0 as Duration
        <- rtn as Integer: 0

      operator rem as pure
        -> arg0 as Float
        <- rtn as Integer: 0

      operator abs as pure
        <- rtn as R1: this

      operator close as pure
        val <- 1
        assert val?

      operator contains as pure
        -> arg0 as Float
        <- rtn as Boolean: true

      operator matches as pure
        -> arg0 as Float
        <- rtn as Boolean: true

      operator empty as pure
        <- rtn as Boolean: true

      operator length as pure
        <- rtn as Integer: 0

//EOF