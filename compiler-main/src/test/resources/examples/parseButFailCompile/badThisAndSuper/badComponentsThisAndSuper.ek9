#!ek9
defines module bad.components.thisandsuper

  defines component

    Component1 as abstract
      value <- "Steve"

      method1()
        //This should be a valid use of this.
        this.value :=: "Stephen"

        //For now add this deliberate error in then I can work on call and method resolution.
        //TODO remove this deliberate error and more to FULL_RESOLUTION.
        @Error: EXPLICIT_TYPE_SYMBOL_DEFINITION: TYPE_NOT_RESOLVED
        var as NonSuch?

      methodY() as abstract

    Component2 extends Component1
      override method1()
        //just call method1() on the suer this is valid
        super.method1()

    InvalidComponent1
      method1()
        //This is not valid because there is no super.
        @Error: FULL_RESOLUTION: AGGREGATE_HAS_NO_SUPER
        super.method1()

  defines application
    App1
      val <- "Name"
      //Now allowed for self reference, so that this application could pass itself to something
      thisApp as App1: this

      //But is this is not OK.
      @Error: FULL_RESOLUTION: INAPPROPRIATE_USE_OF_SUPER
      selfAsSuper as App1: super

  defines program
    Prog1()
      @Error: FULL_RESOLUTION: NOT_REFERENCED
      val <- "Name"
      //Now allowed for self reference
      thisProg as Prog1: this

      assert thisProg?

      //Not allowed.
      @Error: FULL_RESOLUTION: INAPPROPRIATE_USE_OF_SUPER
      selfAsSuper as Prog1: super
//EOF
